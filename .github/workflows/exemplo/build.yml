name: Pipeline Build
on:
  pull_request:
    paths:
      - 'app/**'
      - '.github/workflows/**'
    branches:
      - 'main'
      - 'develop'
      - 'hotfix/**'
      - 'release/**'
  workflow_dispatch:
env:
  BRANCH_TARGET: ${{ github.ref_name }}
  BRANCH_SOURCE: ${{ github.ref_name }} 
  EVENT_TYPE: ${{ github.event_name }} 
  ENVIRONMENT_APP: ${{ github.event_name }}
  REGISTRY_DOCKER: ghcr.io
  REPOSITORY_DOCKER: ${{ github.repository }}
  VERSION_TYPE: ''
  APP: config-server-service
  
jobs:
  info-environment:
    name: Identifying the Environment
    permissions: write-all
    uses: ./.github/workflows/identifier.yml
    with:
      github_base_ref: ${{github.base_ref}}
      github_event_name: ${{github.event_name }}
      github_ref_name: ${{github.ref_name}}
      pr_merged: ${{github.event.pull_request.merged}}
  generate-tag:
    name: Generate Tag Image Docker
    permissions: write-all
    needs: [info-environment]
    uses: ./.github/workflows/tag.yml
    with:
      environment_name: ${{needs.info-environment.outputs.environment_name}}
      path_pom: ./app/pom.xml
  java:
    name: Maven Build
    needs: [info-environment]
    permissions: write-all
    runs-on: ubuntu-latest
    environment:
      name: ${{needs.info-environment.outputs.environment_name}}
    steps:
    - name: Checkout the source code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '21'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file app/pom.xml
  build:
    name: Build and Push Docker image 
    needs: [info-environment, generate-tag, java]
    runs-on: ubuntu-latest
    permissions: write-all
    environment:
      name: ${{needs.info-environment.outputs.environment_name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'
      - name: Build with Maven
        #run: mvn -f ./app/ clean install 
        run: mvn -f ./app/ clean install -P ${{needs.info-environment.outputs.maven_profile}}
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY_DOCKER }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        env:
          TAG_IMAGE: ${{needs.generate-tag.outputs.tag}}
        with:
          context: ./app
          push: true
          tags: ${{ env.REGISTRY_DOCKER }}/${{ github.repository }}/${{ env.APP }}:${{env.TAG_IMAGE}}
  deploy:
    name: Pipeline Deploy
    needs: [info-environment, generate-tag, build]
    permissions: write-all
    uses: ./.github/workflows/deploy.yml
    secrets:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
    with:
      environment_name: ${{needs.info-environment.outputs.environment_name}}
      name_env: ${{needs.info-environment.outputs.github_env_file_field}}
      path_app: app
      docker_image_tag: ${{needs.generate-tag.outputs.tag}}


